(function (module) {
    'use strict';
    var
        path = require('path'),
        fs = require('fs');
    module.exports = function (config) {
        var
            basePath = path.dirname(module.parent.filename),
            classPaths = [basePath];
        if (config === undefined) {
            config = {};
        }
        if (config.includePaths !== undefined) {
            classPaths = classPaths.concat(config.includePaths);
        }
        (function (nodeModulesDir) {
            var fileKey,
                files = fs.readdirSync(nodeModulesDir);
            for (fileKey in files) {
                if (files.hasOwnProperty(fileKey)
                    && fs.lstatSync(path.join(nodeModulesDir, files[fileKey])).isDirectory()
                    && classPaths.indexOf(files[fileKey]) < 0) {
                    classPaths.push(files[fileKey]);
                }
            }
        }(config.nodeModulesPath === undefined ? path.dirname(path.dirname(path.dirname(module.filename))) : config.nodeModulesPath));
        global.include = function (className) {
            console.log("include", classPaths);
            try {
                return require('./' + className);
            } catch (e) {
                var pathKey;
                for (pathKey in classPaths) {
                    if (classPaths.hasOwnProperty(pathKey)) {
                        try {
                            return require(path.join(classPaths[pathKey], className));
                        } catch (ignore) {}
                    }
                }
                return require(className);
            }
        };
    };
}(module, global));